// Generated by CoffeeScript 1.6.3
(function($) {
  var AccordionForm, AccordionStep;
  $.fn.accordionify = function(options) {
    return this.each(function() {
      var element;
      element = $(this);
      if (!element.data('accordionForm')) {
        return new AccordionForm(element, options);
      }
    });
  };
  AccordionForm = (function() {
    function AccordionForm(_element, options) {
      var stepElements,
        _this = this;
      this._element = _element;
      this._options = $.extend({
        stepSelector: '.accordion-step',
        headerSelector: '.accordion-header',
        editButtonClass: 'accordion-edit',
        continueButtonClass: 'accordion-continue',
        isStepComplete: function(element) {
          return true;
        },
        onCollapse: function(element) {},
        onExpand: function(element) {}
      }, options);
      stepElements = this._element.find(this._options.stepSelector);
      this._steps = stepElements.map(function(index, element) {
        return new AccordionStep(_this, index, index === stepElements.length - 1, $(element), _this._options);
      });
      this._transitionTo(0);
      this._collapseSubsequentSteps();
    }

    AccordionForm.prototype["continue"] = function() {
      if (this._currentStep.isComplete() && !this._currentStep.isLast) {
        this._transitionTo(this._currentStep.index + 1);
        return true;
      }
      return false;
    };

    AccordionForm.prototype.goBackTo = function(index) {
      if (index < 0 || index >= this._currentStep.index) {
        return;
      }
      this._transitionTo(index);
      return this._collapseSubsequentSteps();
    };

    AccordionForm.prototype._transitionTo = function(index) {
      if (this._currentStep != null) {
        this._currentStep.collapse(true);
      }
      this._currentStep = this._steps[index];
      return this._currentStep.expand();
    };

    AccordionForm.prototype._collapseSubsequentSteps = function() {
      var step, _i, _len, _ref, _results;
      _ref = this._steps.slice(this._currentStep.index + 1);
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        step = _ref[_i];
        _results.push(step.collapse(false));
      }
      return _results;
    };

    return AccordionForm;

  })();
  return AccordionStep = (function() {
    function AccordionStep(_accordionForm, index, isLast, _element, _options) {
      this._accordionForm = _accordionForm;
      this.index = index;
      this.isLast = isLast;
      this._element = _element;
      this._options = _options;
      this._header = this._element.find(this._options.headerSelector);
      if (!this.isLast) {
        this._appendEditButton();
        this._appendContinueButton();
      }
    }

    AccordionStep.prototype.expand = function() {
      $('html, body').animate({
        scrollTop: this._element.offset().top
      });
      this._header.find('button.' + this._options.editButtonClass).hide();
      this._header.siblings().slideDown(500);
      return this._options.onExpand(this._element[0]);
    };

    AccordionStep.prototype.collapse = function(showEditButton) {
      var editButton;
      editButton = this._header.find('button.' + this._options.editButtonClass);
      if (showEditButton) {
        editButton.show();
      } else {
        editButton.hide();
      }
      this._header.siblings().hide();
      return this._options.onCollapse(this._element[0]);
    };

    AccordionStep.prototype.isComplete = function() {
      return this._options.isStepComplete(this._element);
    };

    AccordionStep.prototype._appendEditButton = function() {
      var button,
        _this = this;
      button = $('<button type="button">Edit</button>');
      button.addClass(this._options.editButtonClass);
      button.hide();
      button.click(function() {
        return _this._accordionForm.goBackTo(_this.index);
      });
      return this._header.append(button);
    };

    AccordionStep.prototype._appendContinueButton = function() {
      var button,
        _this = this;
      button = $('<button type="button">Continue</button>');
      button.addClass(this._options.continueButtonClass);
      button.click(function() {
        return _this._accordionForm["continue"]();
      });
      return this._element.append(button);
    };

    return AccordionStep;

  })();
})(jQuery);
